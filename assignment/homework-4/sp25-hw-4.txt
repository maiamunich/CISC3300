CISC 3300 S25 
Homework 4 
1. How does an interpreted programming language differ from a compiled language? 
Compiled is where once the program is compiled, it expresses the instructions of the target machines; this is not decipherable by humans—this would be code like C, C++, or Java. They tend to be faster to interpret but require more steps to test as it must generate a binary code.
Interpreted languages are where the source code is not directly translated by the target machine. Instead, it uses other programs (interpreters) to read and execute the code, such as JS, Python, PHP, and bash. It is more flexible, has more dynamic features, and has a smaller programming size. Its execution speed, though, is not as fast as that of compiled languages. 
2. Contrast dynamically typed programming languages with statically typed ones. And contrast strongly typed programming languages with weakly typed ones. 
Dynamic typing is when you are able to type-check the performance at runtime so that variables can change throughout their lifetimes. The type is bound to the value, but the types are checked at runtime vs static; the type is bound to the variable, and it's checked at the compile time. 
Weakly typed programs recognize different data types but don't follow them strictly, so they will convert data when it seems reasonable like JS. Strong-typed programs are disciplined and enforced by the compiler
3. What is the difference between var, let, and const when declaring variables in JS? 
Var is considered old-schooled, has a global+function scope (which means it accesses unnecessary things), and is redeclarable.
Let is a block scope (meaning it only takes what is needed and doesn't give full access) and is redeclarable. 
Const is a block scope and not declarable. This is the most commonly used one, as it does not allow just anyone to create changes. 
4. What are anonymous functions? Higher order functions? Callback functions? First class functions? 
Anonymous function is a function without a name, a callback function is a function passed an argument to another function to be called later, a higher-order function is a function that returns a function or takes other functions as arguments, and a first-class function is a where if a function is in that language are treated like other variables. 
5. Define objects in JavaScript. 
It's a data structure that consists of key-value pairs. It is written in a more functional programming style, a declarative programming paradigm style where one applies pure functions in sequence to solve complex problems. 
6. Loop through the cats array variable found here: 
https://github.com/cisc3300/SP25-lecture-code/blob/main/2-13-lecture/cats.js 
\a. if the cats adoption status is available add that cat’s name to a result array
 b. create a new sentence about your newly adopted cats from your result array via the join array function. 
7. Create a variable that sets a value via a ternary operator. Use Math.random() * 10, which will output a random number from 1 to 10, to set the variable’s value as a string of “greater than five!” if the output from Math.random() * 10 is greater than 5, and “less than five!” if the output is less than 5. 
8. Loop through the values of the cat object variable found here: 
https://github.com/cisc3300/SP25-lecture-code/blob/main/2-13-lecture/cats.js. 
Console.log the value of each property in the loop. 
9. Write two if statements, pick the correct comparison operator to have the first if statement equate an integer of 1 and a string of ‘1’ as true. And pick the correct comparison operator to have the second equate an integer of 1 and a string of ‘1’ as false. 
10. Using the map function create a new array via the cats array used in question 6. Pass the map function a callback function that accepts each element of the array as a parameter. Return the value of the name property of each object in the cats array concatenated with the string “ is cute!”. The output should be an array of “Charlie is cute!”, “Lily is cute!”, etc. 
Include questions 6-10 in a single JavaScript file or HTML file via a script tag.